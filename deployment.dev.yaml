apiVersion: v1
kind: Namespace
metadata:
  name: marine-farming

---

apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: marine-farming
data:
  .dockerconfigjson: {{dockerconfigjson}}
type: kubernetes.io/dockerconfigjson

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: marine-farming-dashboard-dev
    app.kubernetes.io/instance: marine-farming
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: marine-farming
    app.kubernetes.io/managed-by: docker
    environment: {{env}}
    tier: frontend
    partition: marine-farming
  name: marine-farming-dashboard-dev
  namespace: marine-farming
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: marine-farming-dashboard-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: marine-farming-dashboard-dev
    spec:
      containers:
        - image: {{image}}
          imagePullPolicy: "Always"
          name: marine-farming-dashboard-dev
          ports:
            - containerPort: 5000
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: marine-farming-dashboard-dev
    app.kubernetes.io/instance: marine-farming
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: marine-farming
    app.kubernetes.io/managed-by: docker
    environment: {{env}}
    tier: frontend
    partition: marine-farming
  name: marine-farming-dashboard-dev
  namespace: marine-farming
spec:
  type: ClusterIP
  ports:
    - name: "80"
      port: 80
      targetPort: 5000
  selector:
    app.kubernetes.io/name: marine-farming-dashboard-dev
status:
  loadBalancer: {}

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: marine-farming-dashboard-dev-ingress
  namespace: marine-farming
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-production
  labels:
    environment: {{env}}
    tier: ingress
    partition: marine-farming
spec:
  tls:
    - hosts:
        - {{host}}
      secretName: marine-farming-dashboard-dev-tls
  rules:
    - host: {{host}}
      http:
        paths:
          - backend:
              serviceName: marine-farming-dashboard-dev
              servicePort: 80
